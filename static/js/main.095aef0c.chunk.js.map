{"version":3,"sources":["theme.js","components/TabPanel.js","actions/index.js","components/HomePageComponents/ItemList.js","components/Homepage.js","components/MultiRangeSlider.js","components/CriteriasSliders.js","components/VariantsSliders.js","components/Ranking.js","components/NewExpertForm.js","components/SingleExpert.js","components/Experts.js","components/App.js","reducers/index.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","TabPanel","props","children","value","index","other","role","hidden","id","Box","p","Typography","component","updateExpertName","expertName","type","payload","connect","state","ownProps","items","criterias","variants","addCriterion","criterion","addVariant","variant","deleteCriterion","deleteVariant","useState","text","setText","itemLabels","map","item","key","ListItem","button","ListItemIcon","onClick","handleDeleteItemButton","ListItemText","Paper","className","TextField","onChange","e","target","label","fontSize","List","addCriterionSlider","leftComp","rightComp","addVariantSlider","whichCriteria","enableButtonsCb","switchPanel","expertId","setExpertId","isEnoughItems","length","Grid","container","spacing","xs","style","marginBottom","Button","disabled","i","j","k","loadSlidersToState","color","size","height","width","useStyles","makeStyles","root","opacity","thumb","transition","mark","display","rail","track","direction","undefined","criteriasSliders","sliderValue","variantsSliders","updateCriterionSlider","updateVariantSlider","setValue","classes","marks","ThemeProvider","dir","Slider","event","newValue","step","min","max","sliders","React","group","setGroup","useEffect","sliderGroup","slider","textAlign","order","Math","floor","random","justify","justifyContent","margin","howManyCompares","criteria","push","addExpertData","data","setAhpInstance","setData","rank","setRanking","temp","user","FAHP","critArgs","varArgs","comparisonsAmount","makePairwiseComparisons","shift","weightsAndCR","metadata","ranking","mapObj","obj","rankData","Object","entries","entry","RankComponent","exportJSON","blob","Blob","JSON","stringify","FileSaver","saveAs","currentExpertName","replace","toLowerCase","ConsistencyRatiosData","marginLeft","marginTop","criteriasChoiceCr","round","alternativesChoicesCrs","crsVar","Content","padding","strokeDasharray","dataKey","cursor","barSize","radius","fill","legendType","background","align","marginRight","cb","dataSize","expertsData","dataState","name","setName","SingleExpert","crs","open","setOpen","Collapse","in","timeout","unmountOnExit","disablePadding","arr","keys","cr","currentExpert","buttonsState","setButtonsDisabled","switchTabPanelToCriterias","Container","fixed","AppBar","position","Tabs","Tab","icon","Experts","combineReducers","action","filter","foundIndex","findIndex","alert","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"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","file":"static/js/main.095aef0c.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: 'rgba(15, 35, 75, 1)',\n    },\n    secondary: {\n      main: '#b3d1ff',\n    },\n  },\n});\n\nexport default theme;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={5}>\n            <Typography component={'span'}>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\nexport default TabPanel;","export const addCriterion = (criterion) => {\n    return{\n        type: 'ADD_CRITERION',\n        payload: criterion\n    }\n}\n\nexport const addVariant = (variant) => {\n    return{\n        type: 'ADD_VARIANT',\n        payload: variant\n    }\n}\n\nexport const deleteCriterion = (criterion) => {\n    return{\n        type: 'DELETE_CRITERION',\n        payload: criterion\n    }\n}\n\nexport const deleteVariant = (variant) => {\n    return{\n        type: 'DELETE_VARIANT',\n        payload: variant\n    }\n}\n\nexport const addCriterionSlider = (leftComp, rightComp) => {\n    return{\n        type: 'ADD_CRITERION_SLIDER',\n        payload: { leftComp, rightComp }\n    }\n}\n\nexport const updateCriterionSlider = (leftComp, rightComp, value) => {\n    return{\n        type: 'UPDATE_CRITERION_SLIDER',\n        payload: { leftComp, rightComp, value }\n    }\n}\n\nexport const addVariantSlider = (leftComp, rightComp, whichCriteria) => {\n    return{\n        type: 'ADD_VARIANT_SLIDER',\n        payload: { leftComp, rightComp, whichCriteria }\n    }\n}\n\nexport const updateVariantSlider = (leftComp, rightComp, whichCriteria, value) => {\n    return{\n        type: 'UPDATE_VARIANT_SLIDER',\n        payload: { leftComp, rightComp, whichCriteria, value }\n    }\n}\n\nexport const updateExpertName = (expertName) => {\n    return{\n        type: 'UPDATE_EXPERT_NAME',\n        payload: expertName\n    }\n}\n\nexport const addExpertData = (data) => {\n    return{\n        type: 'ADD_EXPERT_DATA',\n        payload: data\n    }\n}","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { connect } from 'react-redux';\nimport { addCriterion, addVariant, deleteCriterion, deleteVariant } from '../../actions';\nimport '../App.css';\n\nconst ItemList = ( { items, type, addCriterion, addVariant, deleteCriterion, deleteVariant  } ) => {\n    const [text, setText] = useState('');\n\n    const handleAddClickButton = () => {\n        if(text !== ''){\n            if(type === 'kryteria'){\n                addCriterion(text);\n            }\n            else{\n                addVariant(text);\n            }\n        }\n\n        setText('');\n    }\n\n    const handleTextChange = (e) => {\n        setText(e.target.value);\n    }\n\n    const handleDeleteItemButton = (item) => {\n        if(type === 'kryteria'){\n            deleteCriterion(item);\n        }\n        else{\n            deleteVariant(item);\n        }\n    }\n\n    const itemLabels = items.map((item) => {\n        return(\n            <div key={item}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <RemoveIcon onClick={() => {handleDeleteItemButton(item)}}/>\n                    </ListItemIcon>\n                    <ListItemText primary={item} />\n                </ListItem>\n            </div>\n        )\n    })\n\n    return(\n        <div>\n            <Paper className=\"paper-div\">\n                <div className=\"center-div\">\n                    <TextField value={text} onChange={handleTextChange} id=\"outlined-basic\" label={`Wprowadź ${type === 'kryteria' ? 'kryterium' : 'wariant'}`} variant=\"outlined\" />\n                    <AddIcon fontSize=\"large\" className=\"icon\" onClick={handleAddClickButton}/>\n                </div>\n                <List>\n                    {itemLabels}\n                </List>\n            </Paper>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    //ownProps.type === 'kryteria' ? state.criterias : []\n\n    if(ownProps.type === 'kryteria'){\n        return {\n            items: state.criterias\n        }\n    }\n    else{\n        return {\n            items: state.variants\n        }\n    }\n}\n\nexport default connect(mapStateToProps, {addCriterion, addVariant, deleteCriterion, deleteVariant})(ItemList);","import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ItemList from './HomePageComponents/ItemList';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport { addCriterionSlider, addVariantSlider, updateExpertName } from '../actions';\n\nconst Homepage = ( { enableButtonsCb, switchPanel, criterias, variants, addCriterionSlider, addVariantSlider, updateExpertName } ) => {\n    const [expertId, setExpertId] = useState(\"EKSPERT 1\");\n\n    const isEnoughItems = (criterias.length > 1 && variants.length > 1) ? false : true;\n    \n    const loadSlidersToState = () => {\n        for(let i=0; i<criterias.length; i++){\n            for(let j=i+1; j<criterias.length; j++){\n                addCriterionSlider(criterias[i], criterias[j]);\n            }\n        }\n\n        for(let i=0; i<criterias.length; i++){\n            for(let j=0; j<variants.length; j++){\n                for(let k=j+1; k<variants.length; k++){\n                    addVariantSlider(variants[j], variants[k], criterias[i]);\n                }\n            }\n        }\n    }\n\n    const handleExpertIdChange = (e) => {\n        updateExpertName(e.target.value);\n        setExpertId(e.target.value);\n    }\n\n    return(\n        <Grid container spacing={3}>\n            <Grid item xs={5}>\n                <ItemList type=\"kryteria\"/>\n            </Grid>\n            <Grid item xs={5}>\n                <ItemList type=\"warianty\"/>\n            </Grid>\n            <Grid item xs={2}>\n                <TextField value={expertId} onChange={handleExpertIdChange} id=\"filled-basic\" label=\"ID Decydenta\" variant=\"filled\" style={{marginBottom: '5px'}}/>\n                <Button disabled={isEnoughItems} variant=\"contained\" onClick={() => {enableButtonsCb(); switchPanel(); loadSlidersToState()}} color=\"primary\" size=\"large\" style={{height: '50px', width: '100%'}}>\n                    Zatwierdź\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => {\n    return state;\n}\n\nexport default connect(mapStateToProps, { addCriterionSlider, addVariantSlider, updateExpertName })(Homepage);","import React, { useState } from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { updateCriterionSlider, updateVariantSlider } from '../actions';\r\nimport makeStyles from '@material-ui/styles/makeStyles';\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: 'rgba(15, 35, 75, 1)',\r\n        opacity: '10%',\r\n        '&:hover': {\r\n            opacity: '100%'\r\n        }\r\n      },\r\n    thumb: {\r\n        transition: 'color 0.3s ease-out, height 0.2s ease-out, width 0.2s ease-out',\r\n        '&:hover': {\r\n            color: 'rgba(45, 85, 155, 1)',\r\n            width: 14,\r\n            height: 14,\r\n        }\r\n    },\r\n    mark: {\r\n        display: 'none'\r\n    },\r\n    rail: {\r\n    },\r\n    track: {\r\n    },\r\n});\r\n\r\nconst theme = createMuiTheme({\r\n    direction: 'rtl',\r\n});\r\n\r\nconst MultiRangeSlider = ( { leftComp, rightComp, sliderValue, updateCriterionSlider, updateVariantSlider, whichCriteria } ) => {\r\n    const [value, setValue] = useState(sliderValue);\r\n    const classes = useStyles();\r\n\r\n    const marks = [\r\n        {value: -7, label: rightComp},\r\n        {value: 9, label: leftComp}\r\n    ]\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n        if(whichCriteria === undefined){\r\n            updateCriterionSlider(leftComp, rightComp, value);\r\n        }else{\r\n            updateVariantSlider(leftComp, rightComp, whichCriteria, value);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <ThemeProvider theme={theme}>\r\n            <div dir=\"rtl\" className = \"slider\">\r\n                <Slider\r\n                    value={value}\r\n                    onChange={handleSliderChange}\r\n                    marks={marks}\r\n                    step={0.01}\r\n                    min={-7}\r\n                    max={9}\r\n                    style={{width: '50%', marginBottom: '50px'}}\r\n                    classes={{\r\n                        root: classes.root,\r\n                        thumb: classes.thumb,\r\n                        rail: classes.rail,\r\n                        mark: classes.mark,\r\n                        track: classes.track\r\n                    }}\r\n                />\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    if(ownProps.whichCriteria === undefined){\r\n        for(let i=0; i<state.criteriasSliders.length; i++){\r\n            if(state.criteriasSliders[i].leftComp === ownProps.leftComp && state.criteriasSliders[i].rightComp === ownProps.rightComp){\r\n                return {\r\n                    sliderValue: state.criteriasSliders[i].value\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else{\r\n        for(let i=0; i<state.variantsSliders.length; i++){\r\n            if(state.variantsSliders[i].leftComp === ownProps.leftComp && state.variantsSliders[i].rightComp === ownProps.rightComp && state.variantsSliders[i].whichCriteria === ownProps.whichCriteria){\r\n                return {\r\n                    sliderValue: state.variantsSliders[i].value\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateCriterionSlider, updateVariantSlider })(MultiRangeSlider);","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, Grid, Typography } from '@material-ui/core';\n\nimport MultiRangeSlider from './MultiRangeSlider';\n\nconst CriteriasSliders = ( { sliders } ) => {\n    const [group, setGroup] = React.useState([]);\n\n    useEffect(() => {\n        const sliderGroup = sliders.map((slider, i) => {\n            return(\n                <Grid item xs={12} style={{textAlign:'center', order: Math.floor(Math.random() * 10) + 1}} key={i}>\n                    <MultiRangeSlider \n                        leftComp = {slider.leftComp}\n                        rightComp = {slider.rightComp}\n                        value = {slider.value}\n                    />\n                </Grid>\n            )\n        })\n\n        setGroup(sliderGroup);\n    }, []);\n\n    return(\n        <Paper>\n            <Grid container justify=\"center\" style={{display: 'flex', justifyContent: 'center'}}>\n                    <Typography variant=\"h5\" style={{margin: '30px 0'}}>\n                        Porównaj które kryteria mają większe znaczenie:\n                    </Typography>\n                    {group}\n            </Grid>\n        </Paper>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        sliders: state.criteriasSliders\n    };\n}\n\nexport default connect(mapStateToProps)(CriteriasSliders);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, Grid, Typography } from '@material-ui/core';\n\nimport MultiRangeSlider from './MultiRangeSlider';\n\nconst VariantsSliders = ( { sliders, criterias, variants }) => {\n    const [group, setGroup] = React.useState([]);\n    const howManyCompares = (variants.length**2 - variants.length)/2\n\n    useEffect(() => {\n        const container = criterias.map((criteria, i) => {\n            const sliderGroup = [];\n\n            for(let i=0; i<howManyCompares; i++){\n                sliderGroup.push(\n                    <Grid item xs={12} style={{textAlign:'center', order: Math.floor(Math.random() * 10) + 1}} key={i}>\n                        <MultiRangeSlider \n                            leftComp = {sliders[i].leftComp}\n                            rightComp = {sliders[i].rightComp}\n                            whichCriteria = {criteria}\n                            value = {sliders[i].value}\n                        />\n                    </Grid>\n                )\n            }\n\n            return(\n                <Paper style={{marginBottom: '20px'}} key={i}>\n                    <Grid container justify=\"center\" style={{display: 'flex', justifyContent: 'center'}}>\n                        <Typography variant=\"h5\" style={{margin: '30px 0'}}>\n                            Opierając się o <b>{criteria}</b>, która z alternatyw jest lepsza?\n                        </Typography>\n                        {sliderGroup}\n                    </Grid>\n                </Paper>\n            )\n        })\n\n        setGroup(container);\n    }, []);\n\n    return(\n        <div>\n            {group}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        sliders: state.variantsSliders,\n        criterias: state.criterias,\n        variants: state.variants\n    };\n}\n\nexport default connect(mapStateToProps)(VariantsSliders);","import React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Typography, Button } from '@material-ui/core';\nimport {\n    BarChart, AreaChart, ReferenceLine, Area, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n  } from 'recharts';\nimport { connect } from 'react-redux';\nimport { FAHP } from 'fahpbeta';\nimport { scaleArrayToAhpValues } from '../ahpFunctions'\nimport FileSaver from 'file-saver';\nimport { addExpertData } from '../actions';\nimport './App.css';\n\nconst Ranking = ( props ) => {\n    const [ ahpInstance, setAhpInstance ] = useState(undefined);\n    const [ data, setData ] = useState(undefined);\n    const [ rank, setRanking ] = useState(undefined);\n\n    useEffect(() => {\n        let temp = [];\n        const user = new FAHP(props.variants, props.criterias);\n        const critArgs = [];\n        const varArgs = [];\n        const comparisonsAmount = (props.variants.length**2 - props.variants.length)/2\n\n        props.criteriasSliders.map(slider => {\n            critArgs.push(slider.value);\n        })\n\n        for(let i=0; i<props.variantsSliders.length; i++){\n            temp.push(props.variantsSliders[i].value);\n            if(temp.length%comparisonsAmount === 0){\n                varArgs.push(temp);\n                temp = [];\n            }\n        }\n\n        user.makePairwiseComparisons(critArgs);\n        for(const criteria of props.criterias){\n                user.makePairwiseComparisons(varArgs.shift(), criteria);\n        }\n\n        user.weightsAndCR();\n        const metadata = user.ranking();\n        setData(metadata);\n        setAhpInstance(user);\n        mapObj(metadata.rank);\n    }, [])\n\n    const mapObj = obj => {\n        const entries = Object.entries(obj);\n        const rankData = [];\n\n        for(const entry of entries){\n            rankData.push({\n                \"Nazwa\": entry[0],\n                \"Waga wariantu\": entry[1]\n            })\n        }\n\n        setRanking(rankData);\n    }\n\n    const RankComponent = () => {\n        return rank.map(item => {\n            return(\n                <Typography key={item[\"Nazwa\"]}>\n                    <b>{item[\"Nazwa\"]}</b>: {item[\"Waga wariantu\"]}\n                </Typography>\n            )\n        })\n    }\n\n    const exportJSON = () => {\n        const blob = new Blob([JSON.stringify(data, null, 2)], {type : 'application/json'});\n        FileSaver.saveAs(blob, `${props.currentExpertName.replace(/ /g,'').toLowerCase()}-ahpdata.json`);\n    }\n\n    const crsVar = () => {\n        let i = 0;\n\n        return data.criterias.map(criteria => {\n            return (\n                <li key={criteria}><b>alternatyw w oparciu o {criteria}</b>: {data.alternativesChoicesCrs[i]} <Typography variant=\"caption\">({`${(Math.round(data.alternativesChoicesCrs[i++]*1000)/1000)*100}%`})</Typography></li>\n            )\n        })\n    }\n\n    const ConsistencyRatiosData = () => {\n        return(\n            <Grid>\n                <Grid item xs={12} style={{marginLeft: '20%', marginTop: '10px'}}>               \n                    <ul>\n                        <Typography variant=\"h5\" style={{marginBottom: '5px'}}>\n                            Określając wagę:\n                        </Typography>\n                        <li><b>kryteriów</b>: {data.criteriasChoiceCr} <Typography variant=\"caption\">({`${(Math.round(data.criteriasChoiceCr*1000)/1000) * 100}%`})</Typography></li>\n                        {crsVar()}\n                    </ul>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    const Content = () => {\n        return(\n            <Grid container style={{padding: '0px 50px'}}>\n                <Grid item xs={12} style={{marginLeft: '10%', marginTop: '25px'}}>\n                    <Typography variant=\"h2\"><b>Ranking</b></Typography>\n                    <Typography variant=\"caption\">(Większy wynik oznacza lepszy)</Typography>\n                </Grid>\n                <Grid item xs={12} style={{marginTop: '30px'}}>\n                    <ResponsiveContainer width={'100%'} height={300}>\n                        <BarChart data={rank}>\n                            <CartesianGrid strokeDasharray=\"5 5\" />\n                            <XAxis dataKey=\"Nazwa\" />\n                            <YAxis type=\"number\"/>\n                            <Tooltip cursor={false}/>\n                            <Bar barSize={180} radius={[5,5,0,0]} dataKey=\"Waga wariantu\" fill=\"#eda034\" legendType='circle' background='false'/>\n                        </BarChart>\n                    </ResponsiveContainer>\n                </Grid>\n                <Grid item xs={6} style={{marginLeft: '20%', marginTop: '15px'}}>\n                    <RankComponent />\n                </Grid>\n\n                <Grid item xs={12} style={{marginLeft: '10%', marginTop: '25px'}}>\n                    <Typography variant=\"h2\"><b>Współczynniki spójności</b></Typography>\n                    <Typography variant=\"caption\">({`CR>0.1 oznacza niekonsekwentność w decyzjach`})</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <ConsistencyRatiosData />\n                </Grid>\n\n                <Grid item xs={12} align=\"center\">\n                    <Grid container justify=\"space-evenly\" style={{margin: '30px 0'}}>\n                        <Button variant=\"contained\" color=\"primary\" style={{marginRight: '20px'}} onClick={() => {props.addExpertData([data, props.currentExpertName]); props.cb()}}>Zapisz wyniki</Button>\n                        <Button variant=\"outlined\" onClick={exportJSON}>Eksport JSON</Button>\n                    </Grid> \n                </Grid>\n            </Grid>\n        \n        )\n    }\n\n    return(\n        <div>\n            <Paper>\n                {data === undefined ? '' : <Content />}\n            </Paper>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return state;\n}\n\nexport default connect(mapStateToProps, { addExpertData })(Ranking);","import React, {useState} from 'react';\nimport { Button, TextField, Grid, CssBaseline } from '@material-ui/core';\nimport { updateExpertName } from '../actions';\nimport { connect } from 'react-redux';\n\nconst NewExpertForm = ( { cb, dataSize, updateExpertName } ) => {\n    const dataState = dataSize === 0 ? '' : `EKSPERT ${dataSize+1}`;\n    const [name, setName] = useState(dataState);\n\n    const handleNewExpert = () => {\n        cb();\n        if(name === ''){\n        }\n        else{\n            updateExpertName(name);\n        }\n    }\n\n    const handleTextChange = (e) => {\n        setName(e.target.value);\n    }\n\n    return(\n        <Grid item xs={12}>\n            <Grid container justify='center' style={{padding: '10px'}}>\n                <TextField onChange={handleTextChange} id=\"filled-basic\" label=\"ID Decydenta\" variant=\"filled\" value={name}/>\n                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={handleNewExpert}>\n                    Nowy ekspert\n                </Button>\n            </Grid>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        dataSize: state.expertsData.length\n    }\n}\n\nexport default connect(mapStateToProps, { updateExpertName })(NewExpertForm);","import React from 'react';\nimport { Grid, Paper , List, ListSubheader, ListItem, ListItemIcon, ListItemText, Collapse, Typography } from '@material-ui/core';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst SingleExpert = ( { name, ranking, crs }) => {\n    const [open, setOpen] = React.useState(true);\n\n    const handleClick = () => {\n      setOpen(!open);\n    };\n\n    const rankData = () => {\n        const keys = Object.keys(ranking);\n        const arr = [];\n\n        for(const key of keys){\n            arr.push(\n                <li>\n                    <b>{key}</b> : {ranking[key]}\n                </li>\n            )\n        }\n\n        return arr;\n    }\n\n    const crsData = () => {\n        return crs.map(cr => {\n            return(\n                <li>\n                    {cr}\n                </li>\n            )\n        })\n    }\n\n    const expertData = () => {\n        return(\n            <Grid container>\n                <Grid item xs={6}>\n                    Finalne wagi:\n                    <ul>\n                        {rankData()}\n                    </ul>\n                </Grid>\n\n                <Grid item xs={6}>\n                    współczynniki spójności:\n                    <ul>\n                        {crsData()}\n                    </ul>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    return(\n        <List>\n          <ListItem button onClick={handleClick}>\n              <ListItemIcon>\n              <PersonIcon />\n              </ListItemIcon>\n              <ListItemText primary={name} />\n              {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n              <ListItem button disabled>\n                  <Typography variant=\"overline\">\n                      {expertData()}\n                  </Typography>\n              </ListItem>\n              </List>\n          </Collapse>\n      </List>\n    )\n}\n\nexport default SingleExpert;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid, Paper , List, ListSubheader, ListItem, ListItemIcon, ListItemText, Collapse, Typography } from '@material-ui/core';\nimport NewExpertForm from './NewExpertForm';\nimport SingleExpert from './SingleExpert';\n\nimport { connect } from 'react-redux';\n\nconst ExpertsTab = ( { data, cb }) => {\n\n  const expertList = () => {\n      return data.map(obj => {\n          return(\n            <Grid item xs={6}>\n                <SingleExpert name={obj.expertName} ranking={obj.ranking} crs={obj.crs}/>\n            </Grid>\n          )\n      })\n  }\n\n  return (\n    <Grid container>\n      {expertList()}\n      <NewExpertForm cb={cb}/>\n    </Grid>\n    \n  );\n}\n\nconst mapStateToProps = state => {\n    return {\n        data: state.expertsData\n    }\n}\n\nexport default connect(mapStateToProps)(ExpertsTab);","import React, { useState } from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport theme from '../theme';\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\nimport TabPanel from './TabPanel';\nimport Settings from '@material-ui/icons/Settings';\nimport Typography from '@material-ui/core/Typography';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport FormatListNumberedRtlIcon from '@material-ui/icons/FormatListNumberedRtl';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport Homepage from './Homepage';\nimport CriteriasSliders from './CriteriasSliders';\nimport VariantsSliders from './VariantsSliders';\nimport Ranking from './Ranking';\nimport Experts from './Experts';\n\nconst App = ( { currentExpert }) => {\n    const [value, setValue] = useState(0);\n    const [buttonsState, setButtonsDisabled] = useState(true);\n    \n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const enableButtons = () => {\n        setButtonsDisabled(false);\n    }\n\n    const switchTabPanelToCriterias = () => {\n        setValue(1);\n    }\n\n    const switchTabPanelToExperts = () => {\n        setValue(4);\n    }\n\n    return(\n        <ThemeProvider theme={theme}>\n            <Container fixed>\n                <AppBar position=\"static\">\n                    <Tabs value={value} onChange={handleChange} variant=\"fullWidth\">      \n                        <Tab disabled={!buttonsState} icon={<Settings />} label=\"start\"/>\n                        <Tab disabled={buttonsState} icon={<FormatListNumberedIcon />} label=\"kryteria\"/>\n                        <Tab disabled={buttonsState} icon={<FormatListNumberedRtlIcon />} label=\"warianty\"/>\n                        <Tab disabled={buttonsState} icon={<EqualizerIcon />} label=\"ranking\"/>\n                        <Tab disabled={buttonsState} icon={<PeopleOutlineIcon />} label=\"decydenci\"/>\n                        <Tab disabled label={\n                            <div style={{opacity: '50%'}}>\n                                aktywny ekspert:<br />\n                                {currentExpert}\n                            </div>\n                        }/>\n                    </Tabs>\n                </AppBar>\n\n                <TabPanel value={value} index={0}>\n                    <Homepage enableButtonsCb={enableButtons} switchPanel={switchTabPanelToCriterias}/>\n                </TabPanel>\n\n                <TabPanel value={value} index={1}>\n                    <CriteriasSliders />\n                </TabPanel>\n\n                <TabPanel value={value} index={2}>\n                    <VariantsSliders />\n                </TabPanel>\n\n                <TabPanel value={value} index={3}>\n                    <Ranking cb={switchTabPanelToExperts}/>\n                </TabPanel>\n\n                <TabPanel value={value} index={4}>\n                    <Paper>\n                        <Experts cb={switchTabPanelToCriterias}/>\n                    </Paper>\n                </TabPanel>\n            </Container>\n        </ThemeProvider>\n    )\n}\n\nconst mapStateToProps = state => {\n    return{\n        currentExpert: state.currentExpertName\n    }\n}\n\nexport default connect(mapStateToProps)(App);","import { combineReducers } from \"redux\";\n\nconst criteriasReducer = (state = [], action) => {\n    if(action.type === 'ADD_CRITERION'){\n        return [...state, action.payload]\n    }\n\n    else if(action.type === 'DELETE_CRITERION'){\n        return [...state].filter(criterion => criterion !== action.payload);\n    }\n\n    return state;\n}\n\nconst variantsReducer = (state = [], action) => {\n    if(action.type === 'ADD_VARIANT'){\n        return [...state, action.payload]\n    }\n\n    else if(action.type === 'DELETE_VARIANT'){\n        return [...state].filter(variant => variant !== action.payload);\n    }\n\n    return state;\n}\n\nconst criteriasSlidersReducer = (state = [], action) => {\n    if(action.type === 'ADD_CRITERION_SLIDER'){\n        return [...state, {...action.payload, value: [0,1,2]}];\n    }\n    else if(action.type === 'UPDATE_CRITERION_SLIDER'){\n        let foundIndex;\n        \n        state.findIndex((item, index) => {\n            if(item.leftComp === action.payload.leftComp && item.rightComp === action.payload.rightComp){\n                foundIndex = index;\n            }\n        })\n\n        return [...state].map((obj, index) => { \n            if(index === foundIndex){\n                obj.value = action.payload.value;\n            }\n            return obj;\n        });\n    }\n    else if(action.type === 'RESET_SLIDERS'){\n        return action.payload;\n    }\n\n    return state;\n}\n\nconst variantsSlidersReducer = (state = [], action) => {\n    if(action.type === 'ADD_VARIANT_SLIDER'){\n        return [...state, {...action.payload, value: [0,1,2]}];\n    }\n    else if(action.type === 'UPDATE_VARIANT_SLIDER'){\n        let foundIndex;\n        \n        state.findIndex((item, index) => {\n            if(item.leftComp === action.payload.leftComp && item.rightComp === action.payload.rightComp && item.whichCriteria === action.payload.whichCriteria){\n                foundIndex = index;\n            }\n        })\n\n        return [...state].map((obj, index) => { \n            if(index === foundIndex){\n                obj.value = action.payload.value;\n            }\n            return obj;\n        });\n    }\n    else if(action.type === 'RESET_SLIDERS'){\n        return [];\n    }\n\n    return state;\n}\n\nconst expertNameReducer = (state = \"EKSPERT 1\", action) => {\n    if(action.type === 'UPDATE_EXPERT_NAME'){\n        return action.payload;\n    }\n    \n    return state;\n}\n\nconst expertsReducer = (state = [], action) => {\n    if(action.type === 'ADD_EXPERT_DATA'){\n        const data = action.payload[0];\n        const expertName = action.payload[1];\n\n        for(let i=0; i<state.length; i++){\n            if(state[i].expertName === expertName){\n                alert(\"Dane decydenta o tym ID znajdują się już w bazie\");\n                return state;\n            }\n        }\n\n        return [...state, \n            {\n                expertName: expertName,\n                crs: [data.criteriasChoiceCr, ...data.alternativesChoicesCrs],\n                ranking: data.rank\n            }\n        ]\n    }\n\n    return state;\n}\n\nexport default combineReducers({\n    currentExpertName: expertNameReducer,\n    criterias: criteriasReducer,\n    variants: variantsReducer,\n    criteriasSliders: criteriasSlidersReducer,\n    variantsSliders: variantsSlidersReducer,\n    expertsData: expertsReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n        <App />\n    </Provider>,\n    document.querySelector(\"#root\")\n)"],"sourceRoot":""}